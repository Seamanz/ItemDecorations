apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode rootProject.version_code
        versionName rootProject.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api 'org.zane.commonutils:common-utils:0.0.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}


group = rootProject.group_id
version = rootProject.version_name

def siteUrl = rootProject.site_url
def gitUrl = rootProject.git_url

bintray {
    user = bintray_user
    key = bintray_api_key

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'Android'
        name = rootProject.artifact_Id
        desc = "${rootProject.artifact_Id} for persional Android development"
        websiteUrl = siteUrl
        issueTrackerUrl = rootProject.issue_tracker_url
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'Android', 'ItemDecoration']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name rootProject.artifact_description
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'Zane'
                        name 'Zane Zhang'
                        email 'seamanz380@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions {
    println project.getConvention()
}